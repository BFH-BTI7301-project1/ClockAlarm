/*
 *  This file contains the scheduling of the ClockAlaram project.
 *  It is hosted under: https://github.com/BFH-BTI7301-project1/ClockAlarm.git
 *  Authors: Samuel Gauthier
 */

project clal "ClockAlarm" 2017-02-21 +16w {
  # Set the default time zone for the project. If not specified, UTC is used.
  timezone "Europe/Zurich"
  # Hide the clock time. Only show the date.
  timeformat "%Y-%m-%d"
  # Use US format for numbers
  numberformat "-" "" "," "." 1
  # Use US financial format for currency values. Don't show cents.
  currencyformat "(" ")" "," "." 0
  # Today date
  now ${today}
  # The currency for all money values is the Euro.
  currency "CHF"

  weekstartsmonday
  workinghours tue 8:00 - 12:00
  workinghours wed 13:00 - 17:00
  workinghours sat, sun 10:00 - 12:00, 13:00 - 15:00

  scenario plan "Plan"{

  }

  # resource
  extend resource {
    text Phone "Phone"
  }
}

copyright "© 2017 Loïc Charrière, Samuel Gauthier"

leaves holiday "Spring break" 2017-04-10 +4d
leaves holiday "Easter Monday" 2017-04-17
leaves holiday "The Games" 2017-05-17
leaves holiday "Ascension" 2017-05-25 +1d
leaves holiday "Pentecost" 2017-06-05
flags team

macro allocate_developers [
  allocate charl1
  allocate gauts1
]

resource proj_supervisor "Claude Fuhrer" {
  email ""
}

resource dev "Developers"{
  managers proj_supervisor
  resource charl1 "Loïc Charrière"{
    email "cahrl1@bfh.ch"
  }
  resource gauts1 "Samuel Gauthier"{
    email "gauts1@bfh.ch"
  }
  flags team
}

# List of all the tasks
task ClAl "ClockAlarm" {
  # chargeset dev
  responsible proj_supervisor

  task req "Requirements" {
    effort 7d
    ${allocate_developers}
    depends !deliveries.start
  }

  task software "Software Development" {
    depends !req

    task req_tsan "Time System and Notifications" {
      complete 100

      task impl_silent "Implementation" {
        allocate charl1
        effort 10d
      }
      task test_silent "Test"{
        allocate gauts1
        effort 4d
      }

    }

    task req_lcamnl "Launch ClockAlarm manager (no login)" {
      depends !req_tsan
      complete 100

      task impl_silent "Implementation" {
        allocate charl1
        effort 9d
      }
      task test_silent "Test"{
        allocate gauts1
        effort 2d
      }

    }

    task req_pdb "Persistent Database" {
      complete 100
      effort 17d
      allocate dev

    }

    task req_pas "Program Auto Start" {
      complete 0
      journalentry 2017-06-06 "Not implemented" {
        author gauts1
        alert yellow
      }

    }

    task req_sanasa "Setup a new alert: Simple alert" {
      complete 100
      effort 10d
      allocate dev


    }

    task req_daasapa "Delete an alert: Simple and Periodic alert" {
      complete 100
      effort 8d
      allocate dev

    }

    task req_eaasapa "Edit an alert: Simple and Periodic alert" {
      complete 100
      effort 7d
      allocate dev

    }

    task req_sanapa "Setup a new alert: Periodic alert" {
      complete 100
      effort 8d
      allocate dev

    }

    task req_sanaes "Setup a new alert: E-mail sender" {
      complete 0
      journalentry 2017-05-10 "Not implemented" {
        author gauts1
        alert yellow
        summary "Not implemented because outlook and thunderbird plugins exist."
      }
    }

    task req_daaes "Delete an alert: E-mail sender" {
      complete 0
      journalentry 2017-05-10 "Not implemented" {
        author gauts1
        alert yellow
        summary "Not implemented because outlook and thunderbird plugins exist."
      }

    }

    task req_eaaes "Edit an alert: E-mail sender" {
      complete 0
      journalentry 2017-05-10 "Not implemented" {
        author gauts1
        alert yellow
        summary "Not implemented because outlook and thunderbird plugins exist."
      }

    }

    task req_edc "Edit Default Configuration" {
      complete 100
      effort 5d
      allocate dev

    }

    task req_ia "Import Alerts" {
      complete 100
      effort 9d
      allocate dev

    }

    task req_ea "Export Alerts" {
      complete 100
      effort 8d
      allocate dev

    }

    task req_sanac "Setup a new alert category" {
      complete 0
    }

    task req_daac "Delete an alert category" {
      complete 0
    }

    task req_eaac "Edit an alert category" {
      complete 0
    }

    task req_ic "Import Configuration" {
      complete 100
      effort 5d
      allocate dev
    }

    task req_ec "Export Configuration" {
      complete 100
      effort 5d
      allocate dev
    }

    task req_smon "Silent mode ON" {
      complete 100

      task impl_silent "Implementation" {
        allocate charl1
        effort 3d
      }
      task test_silent "Test"{
        allocate gauts1
        effort 1d
      }
    }

    task req_smoff "Silent mode OFF" {
      complete 100

      task impl_silent "Implementation" {
        allocate charl1
        effort 3d
      }
      task test_silent "Test"{
        allocate gauts1
        effort 1d
      }

    }

    task req_mac "Mute a category" {
      complete 0
      journalentry 2017-06-06 "Not implemented" {
        author gauts1
        alert yellow
      }
    }

    task req_uac "Unmute a category" {
      complete 0
      journalentry 2017-06-06 "Not implemented" {
        author gauts1
        alert yellow
      }
    }

    task req_sa "Snooze Alert" {
      complete 0
      journalentry 2017-06-06 "Not implemented" {
        author gauts1
        alert yellow
      }
    }

  }

  task test "Software testing" {
    depends !req
  }

  task manual "Manual" {
    effort 13d
    ${allocate_developers}
    depends !software
  }

  task deliveries "Milestones" {

    task start "Project start" {
      start ${projectstart}
    }

    task time_system_notifications "Time System and Notifications" {
      depends !!software.req_tsan
    }

    #task proj_doc "Project documentation & developping environement" {

    #}

    task persistent_db "Persistent Database" {
      depends !time_system_notifications, !!software.req_pdb
    }

    task persistence "Persistence & Start at runtime" {
      depends !persistent_db
    }

    task add_edit_delete_alerts "Add/Delete/Edit Alerts" {
      depends !persistence
    }

    task default_conf "Default Configurations & Alerts Management" {
      depends !add_edit_delete_alerts
    }

    task categories "Categories" {
      depends !default_conf
    }

    task import_export_conf_file "Import/Export Configuration File" {
      depends !categories
    }

    task disable_notifs "Disable Notifications" {
      depends !import_export_conf_file
    }

    task snooze_alert "Snooze Alert" {
      depends !disable_notifs
    }

    task end "Project end" {
      end 2017-06-13
    }

  }
}

navigator navbar {
  hidereport @none
}

macro TaskTip [
  tooltip istask() -8<-
    '''Start: ''' <-query attribute='start'->
    '''End: ''' <-query attribute='end'->
    ----
    '''Resources:'''

    <-query attribute='resources'->
    ----
    '''Precursors: '''

    <-query attribute='precursors'->
    ----
    '''Followers: '''

    <-query attribute='followers'->
    ->8-
]

taskreport overview "" {
  columns bsi { title 'WBS' },
          name, start, end, effort,
          chart { ${TaskTip} }
  timeformat "%a %Y-%m-%d"
  loadunit days
  caption 'All effort values are in man days.'
}

textreport frame "" {
  header -8<-
    == ClockAlarm Project ==
    <[navigator id="navbar"]>
  ->8-
  footer "----"

  textreport index "Overview" {
    formats html
    center '<[report id="overview"]>'
  }

  textreport "Status" {
    formats html
    center -8<-
      <[report id="status.dashboard"]>
      ----
      <[report id="status.completed"]>
      ----
      <[report id="status.ongoing"]>
      ----
      <[report id="status.future"]>
    ->8-
  }

  textreport development "Development" {
    formats html
    center '<[report id="development"]>'
  }

  textreport "Deliveries" {
    formats html
    center '<[report id="deliveries"]>'
  }
}

# Macro to set the background color of a cell according to the alert
# level of the task.
macro AlertColor [
  cellcolor plan.alert = 0 "#00D000" # green
  cellcolor plan.alert = 1 "#D0D000" # yellow
  cellcolor plan.alert = 2 "#D00000" # red
]

taskreport status "" {
  columns bsi { width 50 title 'WBS' }, name { width 150 },
          start { width 100 }, end { width 100 },
          effort { width 100 },
          alert { tooltip plan.journal
                          != '' "<-query attribute='journal'->" width 150 },
          status { width 150 }
  scenarios plan

  taskreport dashboard "" {
    headline "Project Dashboard (<-query attribute='now'->)"
    columns name { title "Task" ${AlertColor} width 200},
            resources { width 200 ${AlertColor}
                        listtype bullets
                        listitem "<-query attribute='name'->"
                        start ${projectstart} end ${projectend} },
            alerttrend { title "Trend" ${AlertColor} width 50 },
            journal { width 350 ${AlertColor} }
    journalmode status_up
    journalattributes headline, author, date, summary, details
    hidetask ~hasalert(0)
    sorttasks alert.down, plan.end.up
    period %{${now} - 1w} +1w
  }
  taskreport completed "" {
    headline "Already completed tasks"
    hidetask ~(plan.end <= ${now})
  }
  taskreport ongoing "" {
    headline "Ongoing tasks"
    hidetask ~((plan.start <= ${now}) & (plan.end > ${now}))
  }
  taskreport future "" {
    headline "Future tasks"
    hidetask ~(plan.start > ${now})
  }
}

# A list of tasks showing the resources assigned to each task.
taskreport development "" {
  scenarios plan
  headline "Development - Resource Allocation Report"
  columns bsi { title 'WBS' }, name, start, end, effort { title "Work" },
          duration, chart { ${TaskTip} scale day width 500 }
  timeformat "%Y-%m-%d"
  hideresource ~(isleaf() & isleaf_())
  sortresources name.up
}

# A list of all tasks with the percentage completed for each task
taskreport deliveries "" {
  headline "Project Deliverables"
  columns bsi { title 'WBS' }, name, start, end, note { width 150 }, complete,
          chart { ${TaskTip} }
  taskroot ClAl.deliveries
  hideresource @all
  scenarios plan
}
